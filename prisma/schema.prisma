generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(uuid())
  email              String
  pseudo             String
  password           String
  chats_as_initiator Chat[]    @relation("chat_initiator_user")
  chats_as_target    Chat[]    @relation("chat_target_user")
  messages_sent      Message[] @relation("message_sent")
  messages_received  Message[] @relation("message_received")
  sessions           Session[] @relation("user_sessions")

  @@unique([email, pseudo])
}

model Chat {
  id                Int       @id @default(autoincrement())
  chat_initiator_id String
  chat_initiator    User      @relation("chat_initiator_user", fields: [chat_initiator_id], references: [id], onDelete: Cascade)
  chat_target_id    String
  chat_target       User      @relation("chat_target_user", fields: [chat_target_id], references: [id], onDelete: Cascade)
  updatedAt         DateTime  @updatedAt
  messages          Message[]
}

model Message {
  id           Int      @id @default(autoincrement())
  content      String
  createdAt    DateTime @default(now())
  chat_id      Int
  chat         Chat     @relation(fields: [chat_id], references: [id], onDelete: Cascade)
  from_user_id String
  from_user    User     @relation("message_sent", fields: [from_user_id], references: [id], onDelete: Cascade)
  to_user_id   String
  to_user      User     @relation("message_received", fields: [to_user_id], references: [id], onDelete: Cascade)
}

model Session {
  id        String  @id @default(uuid())
  user_id   String  @unique
  user      User    @relation("user_sessions", fields: [user_id], references: [id], onDelete: Cascade)
  connected Boolean @default(true)
}
